import { IDtoParser, BggForumlistDto } from "../../dto";
import { IFetcher } from "../../fetcher";
import { IRequestPaginator } from "../../paginator";
import { IQueryBuilder } from "../../query";
import { IForumlistRequest } from "../../request";
import { IResponseParser } from "../../responseparser";
import { ProgressResponseDto, QueryOptions } from "../dto";
import { IBggForumlistClient } from "../interface/IBggClients";
export declare class BggForumlistClient implements IBggForumlistClient {
    resource: string;
    builder: IQueryBuilder<IForumlistRequest>;
    fetcher: IFetcher<string, string>;
    responseParser: IResponseParser<string, any>;
    dtoParser: IDtoParser<BggForumlistDto>;
    paginator: IRequestPaginator;
    progressHandler?: ((progress: ProgressResponseDto<BggForumlistDto>) => void);
    constructor(builder: IQueryBuilder<IForumlistRequest>, fetcher: IFetcher<string, string>, responseParser: IResponseParser<string, any>, dtoParser: IDtoParser<BggForumlistDto>, paginator: IRequestPaginator);
    query(request: IForumlistRequest): Promise<BggForumlistDto[]>;
    queryWithProgress(request: IForumlistRequest, progressOptions?: QueryOptions | undefined, progressHandler?: (progress: ProgressResponseDto<BggForumlistDto>) => void): Promise<void>;
    private internalQuery;
}
