import { IDtoParser, BggFamilyDto } from "../../dto";
import { IFetcher } from "../../fetcher";
import { IRequestPaginator } from "../../paginator";
import { IQueryBuilder } from "../../query";
import { IFamilyRequest } from "../../request";
import { IResponseParser } from "../../responseparser";
import { QueryOptions, ProgressResponseDto } from "../dto";
import { IBggFamilyClient } from "../interface";
export declare class BggFamilyClient implements IBggFamilyClient {
    resource: string;
    builder: IQueryBuilder<IFamilyRequest>;
    fetcher: IFetcher<string, string>;
    responseParser: IResponseParser<string, any>;
    dtoParser: IDtoParser<BggFamilyDto>;
    paginator: IRequestPaginator;
    constructor(builder: IQueryBuilder<IFamilyRequest>, fetcher: IFetcher<string, string>, responseParser: IResponseParser<string, any>, dtoParser: IDtoParser<BggFamilyDto>, paginator: IRequestPaginator);
    progressHandler?: (progress: ProgressResponseDto<BggFamilyDto>) => void;
    queryWithProgress(request: IFamilyRequest, progressOptions?: QueryOptions, progressHandler?: (progress: ProgressResponseDto<BggFamilyDto>) => void): Promise<void>;
    query(request: IFamilyRequest): Promise<BggFamilyDto[]>;
    private internalQuery;
}
