import { IDtoParser, BggThreadDto } from "../../dto";
import { IFetcher } from "../../fetcher";
import { IQueryBuilder } from "../../query";
import { IThreadRequest } from "../../request";
import { IResponseParser } from "../../responseparser";
import { IBggThreadClient } from "../interface";
export declare class BggThreadClient implements IBggThreadClient {
    resource: string;
    builder: IQueryBuilder<IThreadRequest>;
    fetcher: IFetcher<string, string>;
    responseParser: IResponseParser<string, any>;
    dtoParser: IDtoParser<BggThreadDto>;
    constructor(builder: IQueryBuilder<IThreadRequest>, fetcher: IFetcher<string, string>, responseParser: IResponseParser<string, any>, dtoParser: IDtoParser<BggThreadDto>);
    query(request: IThreadRequest): Promise<BggThreadDto[]>;
}
