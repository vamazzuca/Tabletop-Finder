var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { JsonAlias, JsonClassType, JsonProperty } from "jackson-js";
export class BggThingVideoDto {
}
__decorate([
    JsonProperty(),
    JsonClassType({ type: () => [String] }),
    JsonAlias({ values: ["@_category"] })
], BggThingVideoDto.prototype, "category", void 0);
__decorate([
    JsonProperty(),
    JsonClassType({ type: () => [String] }),
    JsonAlias({ values: ["@_language"] })
], BggThingVideoDto.prototype, "language", void 0);
__decorate([
    JsonProperty(),
    JsonClassType({ type: () => [String] }),
    JsonAlias({ values: ["@_link"] })
], BggThingVideoDto.prototype, "link", void 0);
__decorate([
    JsonProperty(),
    JsonClassType({ type: () => [String] }),
    JsonAlias({ values: ["@_postdate"] })
], BggThingVideoDto.prototype, "postdate", void 0);
__decorate([
    JsonProperty(),
    JsonClassType({ type: () => [String] }),
    JsonAlias({ values: ["@_title"] })
], BggThingVideoDto.prototype, "title", void 0);
__decorate([
    JsonProperty(),
    JsonClassType({ type: () => [String] }),
    JsonAlias({ values: ["@_username"] })
], BggThingVideoDto.prototype, "username", void 0);
__decorate([
    JsonProperty(),
    JsonClassType({ type: () => [Number] }),
    JsonAlias({ values: ["@_id"] })
], BggThingVideoDto.prototype, "id", void 0);
__decorate([
    JsonProperty(),
    JsonClassType({ type: () => [Number] }),
    JsonAlias({ values: ["@_userid"] })
], BggThingVideoDto.prototype, "userid", void 0);
//# sourceMappingURL=BggThingVideoDto.js.map